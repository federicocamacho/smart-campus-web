var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/APIError.html",[0,0.113,1,2.059]],["body/classes/APIError.html",[0,0.18,1,3.851,2,0.195,3,0.162,4,0.13,5,3.909,6,2.085,7,0.847,8,3.411,9,5.143,10,4.255,11,4.657,12,0.994,13,0.42,14,1.017,15,4.255,16,4.056,17,4.255,18,1.571,19,2.512,20,0.032,21,0.673,22,2.862,23,3.706,24,2.943,25,1.795,26,3.296,27,2.862,28,3.379,29,4.255,30,2.862,31,3.379,32,2.943,33,2.862,34,3.379,35,0.86,36,0.265,37,3.034,38,2.085,39,2.085,40,2.394,41,1.651,42,1.934,43,0.847,44,2.394,45,2.394,46,0.782,47,0.782,48,2.085,49,2.394,50,0.019,51,0.019]],["title/classes/APIResponse.html",[0,0.113,37,2.059]],["body/classes/APIResponse.html",[0,0.185,1,3.953,2,0.207,3,0.172,4,0.139,5,3.527,6,2.219,7,0.901,8,3.808,9,5.154,10,4.049,11,5.04,12,1.058,13,0.447,14,1.062,15,2.547,16,3.074,17,2.547,18,1.517,19,2.32,20,0.032,21,0.558,23,3.074,24,2.219,25,1.353,26,2.734,28,2.547,29,3.529,31,2.547,32,2.219,34,2.547,35,0.648,36,0.274,37,3.387,38,3.074,39,3.074,40,3.529,41,2.135,42,1.972,43,1.547,44,3.529,45,3.529,46,0.832,47,0.832,48,2.219,49,2.547,50,0.02,51,0.02,52,3.045,53,3.045,54,3.045]],["title/injectables/ApiService.html",[55,0.868,56,2.315]],["body/injectables/ApiService.html",[0,0.162,2,0.311,3,0.258,4,0.208,20,0.031,21,0.604,36,0.258,50,0.026,51,0.026,55,1.606,56,3.997,57,3.821,58,0.953,59,4.569,60,0.89,61,0.814,62,1.906,63,2.422,64,2.422]],["title/components/AppComponent.html",[65,0.566,66,1.104]],["body/components/AppComponent.html",[0,0.117,2,0.148,3,0.123,4,0.099,7,0.645,12,0.757,13,0.32,14,0.833,18,1.322,19,1.824,20,0.032,21,0.669,24,2.41,25,1.47,35,0.851,36,0.187,41,2.211,42,1.756,43,0.645,46,1.092,47,1.092,48,2.41,50,0.016,51,0.016,58,0.353,60,0.536,61,0.388,65,0.936,66,1.995,67,1.055,68,1.055,69,1.055,70,1.823,71,2.41,72,2.41,73,1.352,74,2.12,75,1.055,76,2.684,77,2.684,78,2.767,79,1.602,80,3.308,81,2.192,82,4.465,83,4.465,84,5.054,85,1.432,86,2.367,87,4.465,88,1.588,89,2.367,90,3.308,91,1.352,92,1.352,93,0.757,94,2.41,95,2.179,96,2.767,97,3.308,98,1.061,99,2.163,100,2.179,101,3.308,102,2.41,103,3.308,104,3.308,105,2.179,106,2.767,107,3.308,108,2.144,109,3.308,110,2.767,111,1.983,112,1.754,113,2.144,114,2.179,115,2.767,116,2.41,117,3.308,118,2.144,119,2.767,120,2.767,121,2.179,122,1.352,123,1.055,124,1.282,125,1.823,126,3.999,127,2.144,128,2.179,129,1.823,130,1.823,131,1.588,132,2.179,133,1.823,134,1.823,135,1.823,136,1.588,137,0.699,138,1.602,139,1.602,140,2.163,141,1.055,142,1.055,143,0.757,144,1.055,145,1.055,146,0.699,147,1.055,148,0.757,149,1.055,150,0.757,151,1.055,152,1.055,153,0.699,154,0.968,155,1.055]],["title/modules/AppModule.html",[156,0.94,157,1.855]],["body/modules/AppModule.html",[0,0.118,2,0.226,3,0.188,4,0.151,20,0.032,36,0.254,50,0.021,51,0.021,60,1.015,61,0.593,62,2.026,66,2.191,137,1.067,156,1.327,157,3.705,158,1.612,159,2.959,160,2.959,161,1.943,162,2.784,163,2.784,164,2.784,165,2.784,166,3.405,167,3.405,168,2.617,169,1.943,170,1.765,171,3.329,172,4.484,173,3.75,174,2.157,175,2.617,176,2.784,177,3.329,178,3.329,179,4.484,180,3.329,181,3.329,182,2.784,183,2.784,184,3.329,185,3.329,186,3.329,187,3.329,188,3.329,189,3.329,190,3.329,191,3.329]],["title/modules/AppRoutingModule.html",[156,0.94,166,1.855]],["body/modules/AppRoutingModule.html",[0,0.162,2,0.234,3,0.195,4,0.157,20,0.032,36,0.292,46,0.941,47,0.941,50,0.022,51,0.022,60,0.929,61,0.614,65,0.919,78,2.881,108,2.232,110,3.837,112,1.826,122,1.407,123,1.668,124,1.471,146,1.471,153,1.471,154,1.53,156,1.527,166,3.011,175,2.678,192,3.445,193,3.445,194,4.007,195,3.837,196,2.011,197,3.445,198,2.973,199,2.973,200,3.445,201,2.509,202,4.79,203,3.758,204,2.881,205,3.445,206,4.588,207,4.588,208,2.881,209,2.881,210,3.445,211,3.445,212,2.509,213,2.881,214,3.445]],["title/injectables/AuthGuard.html",[55,0.868,199,2.059]],["body/injectables/AuthGuard.html",[0,0.146,2,0.199,3,0.166,4,0.133,7,0.868,12,1.019,13,0.431,14,1.035,18,1.195,20,0.032,21,0.68,35,0.624,36,0.232,41,1.939,42,1.428,43,0.868,46,0.801,47,0.801,50,0.02,51,0.02,55,1.296,58,0.476,60,0.834,61,0.523,62,1.428,63,1.556,64,1.556,73,1.68,81,2.214,85,1.649,88,2.138,89,3.055,91,1.68,92,1.68,93,1.019,94,4.089,98,1.649,122,1.199,123,1.421,127,1.901,131,2.138,194,3.747,196,1.713,199,2.664,203,4.198,212,3.945,215,2.454,216,4.301,217,2.995,218,4.301,219,2.664,220,4.111,221,4.111,222,3.747,223,5.241,224,2.934,225,2.934,226,2.664,227,4.111,228,2.454,229,2.18,230,2.454,231,2.934,232,1.901]],["title/injectables/AuthenticationService.html",[55,0.868,89,1.685]],["body/injectables/AuthenticationService.html",[0,0.164,2,0.237,3,0.197,4,0.158,7,1.03,12,1.209,13,0.511,20,0.032,21,0.611,25,2.052,36,0.261,41,2.119,42,1.605,46,0.951,47,0.951,50,0.022,51,0.022,55,1.416,58,0.841,60,0.749,61,0.62,62,1.605,63,1.846,64,1.846,81,1.952,85,1.481,89,3.196,91,1.888,92,1.888,98,1.663,122,1.423,123,1.686,201,2.537,217,3.366,222,4.024,226,3.579,233,2.912,234,3.864,235,5.524,236,3.482,237,3.482,238,3.366,239,5.748,240,4.62,241,4.62,242,3.482]],["title/classes/ChangePasswordInput.html",[0,0.113,243,2.059]],["body/classes/ChangePasswordInput.html",[0,0.188,2,0.294,3,0.244,4,0.197,13,0.635,14,1.336,18,1.336,19,2.51,20,0.031,21,0.702,35,0.92,36,0.244,43,1.28,50,0.025,51,0.025,58,0.701,93,1.502,243,3.438,244,4.801,245,3.616,246,5.23,247,5.306,248,5.306,249,3.616]],["title/modules/CoreModule.html",[62,1.104,156,0.94]],["body/modules/CoreModule.html",[0,0.144,2,0.197,3,0.164,4,0.132,7,0.857,20,0.032,36,0.305,46,0.79,47,0.79,50,0.019,51,0.019,60,1.02,61,0.516,62,2.172,71,2.967,72,2.967,122,1.183,123,1.402,137,0.928,143,2.14,148,2.14,156,1.654,157,2.377,158,1.402,159,2.75,160,1.69,161,1.69,168,2.377,169,1.69,170,1.535,175,2.377,195,3.406,196,1.69,234,3.406,250,2.421,251,2.421,252,2.421,253,2.421,254,3.267,255,2.895,256,2.639,257,4.072,258,4.072,259,3.432,260,1.876,261,3.432,262,1.876,263,1.876,264,3.432,265,1.876,266,4.711,267,2.895,268,4.072,269,2.421,270,4.711,271,2.421,272,2.421,273,2.421,274,2.895,275,2.895,276,2.421]],["title/components/FooterComponent.html",[65,0.566,143,1.104]],["body/components/FooterComponent.html",[0,0.124,2,0.237,3,0.197,4,0.159,13,0.513,20,0.031,21,0.612,35,0.985,36,0.197,50,0.022,51,0.022,58,0.842,60,0.566,61,0.622,65,1.025,66,1.213,67,1.691,68,1.691,69,1.691,73,1.891,74,2.753,75,1.691,76,3.003,77,3.003,79,2.242,85,1.484,86,2.932,98,1.119,99,1.691,111,2.056,124,1.119,137,1.119,138,2.242,139,2.242,140,2.678,141,1.691,142,1.691,143,1.921,144,1.691,145,1.691,146,1.119,147,1.691,148,1.213,149,1.691,150,1.213,151,1.691,152,1.691,153,1.119,154,1.551,155,1.691,277,2.92,278,5.53,279,2.454,280,4.629,281,4.629,282,3.491,283,3.491,284,3.871]],["title/components/HomeComponent.html",[65,0.566,124,1.019]],["body/components/HomeComponent.html",[0,0.125,2,0.239,3,0.199,4,0.16,13,0.517,20,0.031,21,0.616,35,0.99,36,0.199,50,0.022,51,0.022,58,0.845,60,0.571,61,0.627,65,1.028,66,1.223,67,1.705,68,1.705,69,1.705,73,1.901,74,2.764,75,1.705,76,3.008,77,3.008,79,2.254,85,1.492,86,2.941,98,1.129,99,1.705,111,2.067,124,1.779,137,1.129,138,2.254,139,2.254,140,2.687,141,1.705,142,1.705,143,1.223,144,1.705,145,1.705,146,1.129,147,1.705,148,1.223,149,1.705,150,1.223,151,1.705,152,1.705,153,1.129,154,1.564,155,1.705,279,2.467,285,2.944,286,3.892,287,4.654,288,4.654,289,3.52,290,3.52]],["title/components/LoginComponent.html",[65,0.566,146,1.019]],["body/components/LoginComponent.html",[0,0.093,2,0.11,3,0.092,4,0.074,7,0.48,8,3.25,12,0.563,13,0.238,14,0.66,18,1.271,20,0.032,21,0.686,25,2.403,26,3.168,35,0.703,36,0.148,42,1.755,43,1.124,46,1.218,47,1.218,50,0.012,51,0.012,58,0.536,60,0.536,61,0.289,65,0.837,66,0.563,67,0.786,68,0.786,69,0.786,73,1.35,74,2.013,75,0.786,76,2.446,77,2.446,79,1.271,81,2.278,85,0.841,86,2.013,91,1.072,92,1.072,93,0.563,98,1.337,99,2.368,111,1.166,112,2.957,115,2.195,119,3.175,120,2.195,124,0.52,137,0.52,138,1.271,139,1.271,140,1.839,141,0.786,142,0.786,143,0.563,144,0.786,145,0.786,146,1.831,147,0.786,148,0.563,149,0.786,150,0.563,151,0.786,152,0.786,153,0.52,154,0.72,155,0.786,229,0.86,238,1.912,243,2.891,256,2.891,279,1.391,291,1.356,292,4.339,293,3.362,294,3.168,295,2.624,296,2.624,297,3.797,298,4.462,299,2.624,300,3.797,301,3.797,302,3.797,303,2.624,304,2.624,305,1.622,306,2.624,307,3.797,308,1.622,309,4.089,310,4.462,311,3.731,312,1.622,313,1.622,314,1.622,315,1.622,316,4.462,317,2.891,318,1.622,319,1.622,320,1.391,321,1.7,322,1.7,323,2.891,324,2.624,325,1.356,326,1.622,327,1.051,328,3.25,329,3.25,330,2.624,331,1.622,332,1.622,333,1.929,334,1.622,335,1.622,336,4.462,337,4.462,338,4.462,339,3.797,340,3.797,341,4.462,342,2.624]],["title/injectables/LoginGuard.html",[55,0.868,198,2.059]],["body/injectables/LoginGuard.html",[0,0.145,2,0.199,3,0.165,4,0.133,7,0.864,12,1.015,13,0.429,14,1.032,18,1.192,20,0.032,21,0.679,25,1.82,35,0.622,36,0.232,41,1.934,42,1.424,43,0.864,46,0.798,47,0.798,50,0.019,51,0.019,55,1.293,58,0.474,60,0.832,61,0.52,62,1.424,63,1.549,64,1.549,73,1.674,81,2.212,85,1.646,88,2.128,89,3.051,91,1.674,92,1.674,93,1.015,94,4.083,98,1.646,112,2.173,113,2.656,122,1.193,123,1.415,127,1.893,131,2.128,194,3.739,196,1.705,198,2.656,203,4.193,212,2.128,216,4.293,217,2.986,218,3.428,219,2.656,222,2.986,223,5.237,226,2.656,228,2.443,229,2.173,230,2.443,232,1.893,343,2.443,344,4.098,345,2.656,346,2.921,347,5.133,348,2.921,349,4.098,350,2.921]],["title/classes/LoginInput.html",[0,0.113,317,2.059]],["body/classes/LoginInput.html",[0,0.181,2,0.277,3,0.231,4,0.185,13,0.599,14,1.288,18,1.407,19,2.626,20,0.031,21,0.74,35,0.868,36,0.231,43,1.207,50,0.024,51,0.024,58,0.661,93,1.416,294,4.099,317,3.315,351,3.41,352,5.155,353,4.279,354,5.116,355,4.077,356,3.41,357,3.41]],["title/modules/MainModule.html",[156,0.94,167,1.855]],["body/modules/MainModule.html",[0,0.159,2,0.227,3,0.189,4,0.152,7,0.99,20,0.032,36,0.287,46,0.914,47,0.914,50,0.021,51,0.021,60,0.984,61,0.596,65,0.802,71,3.278,72,3.278,112,2.385,113,2.168,122,1.367,123,1.62,124,1.873,137,1.073,146,1.873,153,1.873,156,1.609,158,1.62,159,2.967,160,1.953,161,1.953,167,3.708,168,2.626,169,1.953,170,1.774,175,2.626,208,3.763,209,3.763,254,3.097,256,2.916,259,3.278,260,2.168,261,3.278,262,2.168,263,2.168,264,3.278,265,2.168,276,2.798,358,2.798,359,2.798,360,3.346,361,3.346]],["title/classes/MenuItem.html",[0,0.113,362,2.059]],["body/classes/MenuItem.html",[0,0.114,2,0.142,3,0.118,4,0.095,7,0.62,12,0.727,13,0.308,14,1.101,18,1.5,19,2.562,20,0.032,21,0.707,26,3.623,35,1.279,36,0.118,41,2.183,42,1.856,43,1.396,46,0.572,47,0.572,50,0.015,51,0.015,58,0.339,81,2.332,91,1.311,92,1.311,93,0.727,106,2.684,108,2.08,111,2.526,113,2.08,116,1.526,118,3.686,122,0.856,136,1.526,202,4.757,204,4.162,219,2.834,229,2.319,232,1.357,238,2.338,345,2.08,362,3.826,363,4.582,364,1.526,365,1.751,366,2.094,367,4.374,368,5.479,369,4.332,370,3.658,371,3.209,372,3.209,373,3.625,374,2.094,375,3.209,376,3.209,377,3.209,378,3.209,379,2.684,380,2.094,381,2.338,382,3.209,383,2.094,384,2.684,385,2.684,386,2.094,387,2.684,388,2.094,389,2.094,390,3.209,391,3.209,392,3.209,393,3.209,394,1.751,395,1.526,396,2.094,397,2.094,398,2.094]],["title/classes/MenuMock.html",[0,0.113,399,2.315]],["body/classes/MenuMock.html",[0,0.152,2,0.167,3,0.139,4,0.112,7,0.729,12,0.855,13,0.362,14,0.912,18,0.912,20,0.032,21,0.569,36,0.205,42,1.494,46,1.175,47,1.175,50,0.017,51,0.017,58,0.697,60,0.399,81,1.992,85,1.162,91,1.481,92,1.481,98,1.379,118,3.774,122,1.758,133,3.598,134,3.598,135,3.598,136,3.134,201,4.303,286,2.06,320,1.306,321,1.596,322,1.596,327,1.596,333,3.4,362,4.047,373,4.088,381,2.641,399,4.088,400,3.968,401,1.794,402,3.968,403,4.745,404,3.625,405,2.463,406,3.032,407,2.463,408,2.463,409,3.625,410,2.463,411,5.825,412,3.625,413,2.463,414,3.625,415,3.625,416,2.463,417,3.032,418,3.625,419,2.463,420,2.06,421,3.625,422,3.625,423,2.463,424,2.463,425,3.625,426,3.625,427,2.463,428,2.06,429,3.625,430,3.625,431,2.463,432,2.06,433,3.625,434,3.625,435,2.463,436,2.06,437,3.625,438,3.625,439,2.463,440,2.463,441,3.625,442,3.625,443,2.463,444,2.06,445,2.463,446,2.463,447,2.463,448,2.463]],["title/components/NavComponent.html",[65,0.566,148,1.104]],["body/components/NavComponent.html",[0,0.112,2,0.14,3,0.116,4,0.093,7,0.608,12,0.713,13,0.302,14,0.796,18,1.337,20,0.032,21,0.618,23,3.155,25,1.405,35,0.921,36,0.179,39,2.304,41,2.17,42,1.624,43,0.936,46,1.053,47,1.053,50,0.015,51,0.015,58,0.333,60,0.801,61,0.366,65,0.97,66,0.713,67,0.995,68,0.995,69,0.995,73,1.292,75,0.995,76,2.638,77,2.638,79,1.531,81,2.163,85,1.014,91,1.292,92,1.292,93,1.098,98,0.659,99,0.995,102,2.304,111,1.923,116,3.597,118,3.441,124,0.659,125,1.718,129,2.645,130,2.645,137,0.659,138,1.531,139,1.531,140,2.097,141,0.995,142,0.995,143,0.713,144,0.995,145,0.995,146,0.659,147,0.995,148,1.995,149,0.995,150,0.713,151,2.264,152,0.995,153,0.659,154,0.912,155,0.995,229,1.676,256,2.049,269,1.718,279,1.676,293,2.049,311,2.645,327,1.331,328,2.809,329,2.809,345,2.049,379,2.645,402,1.718,449,1.718,450,3.162,451,3.162,452,4.33,453,5.144,454,4.33,455,3.162,456,2.054,457,5.311,458,3.162,459,3.162,460,2.054,461,3.162,462,4.675,463,2.054,464,4.33,465,3.162,466,3.162,467,2.054,468,2.479,469,3.162,470,2.645,471,3.621,472,2.054,473,1.718,474,2.054,475,2.054,476,1.331,477,2.054,478,2.054,479,2.054,480,2.054,481,2.054,482,2.054,483,2.054,484,2.054,485,2.054,486,3.162,487,4.33,488,3.162,489,3.162]],["title/components/NavSearchComponent.html",[65,0.566,150,1.104]],["body/components/NavSearchComponent.html",[0,0.1,2,0.12,3,0.1,4,0.08,7,0.524,12,0.614,13,0.26,14,0.708,18,1.394,19,2.296,20,0.032,21,0.688,25,2.242,35,0.849,36,0.159,38,2.049,41,1.631,42,1.753,43,0.833,46,1.09,47,1.09,50,0.019,51,0.013,58,0.568,60,0.456,61,0.315,65,0.776,66,0.614,67,0.857,68,0.857,69,0.857,73,1.431,74,2.116,75,0.857,76,2.519,77,2.519,79,1.362,81,2.168,85,1.487,86,2.116,91,1.149,92,1.149,93,0.977,98,1.397,99,2.246,102,2.049,111,2.242,124,0.567,127,1.146,137,0.567,138,1.362,139,1.362,140,1.933,141,0.857,142,0.857,143,0.614,144,0.857,145,0.857,146,0.567,147,0.857,148,0.614,149,0.857,150,2.001,151,2.356,152,0.857,153,0.567,154,0.786,155,0.857,229,1.491,232,1.146,279,1.491,293,1.823,320,0.938,328,2.908,329,2.908,365,1.479,370,2.353,373,2.049,468,2.935,470,3.338,471,4.458,490,4.458,491,3.883,492,1.479,493,3.643,494,2.813,495,2.813,496,3.991,497,3.991,498,5.201,499,2.813,500,2.813,501,3.502,502,4.356,503,2.813,504,1.769,505,2.813,506,1.769,507,1.769,508,2.813,509,1.769,510,3.991,511,3.991,512,2.813,513,2.813,514,1.769,515,2.813,516,1.769,517,2.813,518,1.769,519,2.353,520,2.813,521,1.769,522,1.769,523,2.813,524,2.813,525,1.769,526,1.769,527,1.769,528,1.769,529,3.502]],["title/components/NotFoundComponent.html",[65,0.566,153,1.019]],["body/components/NotFoundComponent.html",[0,0.122,2,0.234,3,0.194,4,0.156,13,0.504,20,0.031,21,0.606,35,0.975,36,0.194,50,0.022,51,0.022,58,0.835,60,0.557,61,0.612,65,1.019,66,1.193,67,1.664,68,1.664,69,1.664,73,1.871,74,2.731,75,1.664,76,2.993,77,2.993,79,2.218,85,1.468,86,2.913,98,1.101,99,1.664,111,2.034,124,1.101,137,1.101,138,2.218,139,2.218,140,2.661,141,1.664,142,1.664,143,1.193,144,1.664,145,1.664,146,1.101,147,1.664,148,1.193,149,1.664,150,1.193,151,1.664,152,1.664,153,1.762,154,2.542,155,1.664,279,2.428,284,3.83,530,4.308,531,4.308,532,2.873,533,4.579,534,4.579,535,3.435,536,3.435]],["title/classes/SearchItem.html",[0,0.113,468,1.685]],["body/classes/SearchItem.html",[0,0.18,2,0.274,3,0.228,4,0.183,13,0.591,14,1.278,18,1.399,19,2.649,20,0.031,21,0.735,35,1.327,36,0.228,43,1.192,50,0.024,51,0.024,58,0.653,93,1.398,364,2.933,369,5.277,394,3.367,395,2.933,468,2.691,537,4.881,538,5.076,539,5.076,540,5.076,541,4.026]],["title/classes/SearchMock.html",[0,0.113,476,2.059]],["body/classes/SearchMock.html",[0,0.184,2,0.283,3,0.236,4,0.19,13,0.612,20,0.031,21,0.686,36,0.236,50,0.025,51,0.025,58,0.916,60,0.676,81,1.57,85,1.664,98,1.664,320,2.211,321,2.702,322,2.702,327,2.702,333,3.45,401,3.038,420,3.487,468,2.995,476,3.362,542,4.724,543,5.648,544,5.91,545,4.17,546,4.17,547,4.17,548,4.17,549,4.17,550,4.17]],["title/modules/SharedModule.html",[156,0.94,254,1.685]],["body/modules/SharedModule.html",[0,0.123,2,0.235,3,0.196,4,0.158,20,0.031,36,0.312,50,0.022,51,0.022,60,0.976,61,0.617,137,1.11,150,2.204,156,1.363,158,1.677,159,3.019,160,2.021,161,2.021,168,2.687,169,2.021,170,1.836,175,2.687,254,3.192,259,3.354,260,2.244,261,3.354,262,2.244,263,2.244,264,3.354,265,2.244,491,2.523,551,2.896,552,2.896,553,2.896,554,3.463,555,5.172,556,5.172,557,5.172,558,5.172,559,5.172,560,5.172,561,5.172,562,5.172,563,5.172,564,5.172,565,5.172,566,2.896,567,3.463,568,3.463]],["title/classes/SigningInput.html",[0,0.113,323,2.059]],["body/classes/SigningInput.html",[0,0.155,2,0.219,3,0.182,4,0.147,13,0.473,14,1.104,18,1.488,19,2.703,20,0.031,21,0.782,35,1.298,36,0.182,43,0.953,50,0.021,51,0.021,58,0.522,93,1.119,246,5.03,249,2.693,294,3.898,323,2.841,352,4.831,353,3.667,356,2.693,357,2.693,395,2.346,569,2.693,570,6.015,571,6.015,572,4.384,573,3.22,574,3.22,575,3.22,576,3.22,577,3.22,578,3.22,579,3.22]],["title/injectables/UserService.html",[55,0.868,580,2.315]],["body/injectables/UserService.html",[0,0.162,2,0.311,3,0.258,4,0.208,20,0.031,21,0.604,36,0.258,50,0.026,51,0.026,55,1.606,58,0.953,60,0.89,61,0.814,62,1.906,63,2.422,64,2.422,580,3.997,581,3.821,582,4.569]],["title/injectables/UtilService.html",[55,0.868,583,2.315]],["body/injectables/UtilService.html",[0,0.162,2,0.311,3,0.258,4,0.208,20,0.031,21,0.604,36,0.258,50,0.026,51,0.026,55,1.606,58,0.953,60,0.89,61,0.814,62,1.906,63,2.422,64,2.422,583,3.997,584,3.821,585,4.569]],["title/coverage.html",[586,3.633]],["body/coverage.html",[0,0.216,1,2.076,4,0.146,5,3.183,6,3.183,18,0.807,20,0.031,37,2.076,50,0.021,51,0.021,55,1.575,56,2.334,57,2.68,65,1.051,66,1.113,70,2.68,89,1.699,124,1.027,143,1.113,146,1.027,148,1.113,150,1.113,153,1.027,198,2.076,199,2.076,215,2.68,233,2.68,243,2.076,244,2.68,245,2.68,277,2.68,285,2.68,291,2.68,317,2.076,320,3.297,323,2.076,333,1.87,343,2.68,351,2.68,362,2.076,363,2.68,364,3.183,387,2.68,399,2.334,400,2.68,401,3.183,449,2.68,468,1.699,476,2.076,490,2.68,491,2.334,492,2.68,530,2.68,531,2.68,532,2.68,537,2.68,542,2.68,569,2.68,580,2.334,581,2.68,583,2.334,584,2.68,586,2.68,587,2.68,588,3.204,589,5.902,590,3.204,591,4.972,592,4.37,593,5.589,594,3.204,595,4.37,596,4.37,597,3.204,598,4.37,599,3.204,600,3.204,601,3.204,602,4.37,603,3.204,604,3.204,605,3.204,606,3.204]],["title/dependencies.html",[158,1.852,607,2.65]],["body/dependencies.html",[20,0.032,50,0.024,51,0.024,61,0.722,158,1.962,173,4.262,174,3.302,182,3.388,183,3.388,196,2.365,260,2.625,262,2.625,263,2.625,265,2.625,271,3.388,272,3.388,273,3.388,473,4.262,566,3.388,608,4.052,609,6.42,610,4.052,611,4.052,612,4.052,613,4.262,614,4.052,615,4.052,616,4.052,617,4.052,618,4.052,619,4.052,620,4.052,621,4.052,622,4.052,623,4.052,624,4.052,625,4.052,626,4.052,627,4.052]],["title/miscellaneous/enumerations.html",[628,2.216,629,3.198]],["body/miscellaneous/enumerations.html",[13,0.706,20,0.027,50,0.027,51,0.027,112,2.549,292,4.021,294,3.116,320,2.549,321,3.116,322,3.116,325,4.73,628,4.021,629,4.021,630,4.808,631,5.656,632,4.808,633,6.009]],["title/index.html",[13,0.389,634,2.65,635,2.65]],["body/index.html",[3,0.178,4,0.143,14,0.791,16,2.289,20,0.027,32,2.289,35,0.669,50,0.02,51,0.02,65,0.877,96,4.795,108,3.715,170,1.666,174,2.036,176,4.116,213,2.628,219,2.036,226,2.036,293,2.036,309,2.628,333,1.834,345,2.036,381,2.289,384,2.628,385,2.628,406,5.001,417,4.642,493,2.628,519,4.116,587,3.605,613,2.628,636,3.142,637,4.311,638,5.296,639,5.296,640,3.142,641,4.311,642,5.872,643,5.296,644,3.142,645,3.142,646,3.142,647,3.142,648,3.142,649,3.142,650,3.142,651,3.142,652,3.142,653,3.142,654,3.142,655,3.142,656,5.296,657,4.311,658,3.142,659,3.142,660,3.142,661,3.142,662,3.142,663,5.98,664,3.142,665,3.142,666,3.142,667,3.142,668,3.142,669,3.142,670,4.311,671,5.55,672,4.311,673,3.142,674,3.142,675,4.311,676,3.142,677,3.142,678,3.142,679,3.142,680,3.142,681,4.921,682,3.142,683,3.142,684,3.142,685,3.142,686,3.142,687,3.142,688,3.142,689,3.142,690,3.142,691,3.142,692,3.142,693,3.142,694,4.311,695,3.142,696,3.142,697,3.142]],["title/modules.html",[156,1.286]],["body/modules.html",[20,0.026,50,0.026,51,0.026,62,1.628,156,1.387,157,2.735,166,2.735,167,2.735,174,3.985,254,2.484,698,6.15,699,6.15,700,6.281,701,4.686,702,4.686]],["title/overview.html",[703,3.633]],["body/overview.html",[0,0.119,20,0.031,36,0.189,50,0.021,51,0.021,55,0.914,62,2.193,65,0.596,66,2.073,124,1.63,137,1.073,143,2.073,146,1.63,148,2.073,150,2.073,153,1.63,156,1.332,157,3.658,158,1.62,159,1.953,160,1.953,161,1.953,162,2.798,163,2.798,164,2.798,165,2.798,166,2.967,167,3.658,168,2.626,169,1.953,170,1.774,250,2.798,251,2.798,252,2.798,253,2.798,254,3.322,358,2.798,359,2.798,428,2.798,432,2.798,436,2.798,444,2.798,551,2.798,552,2.798,553,2.798,703,2.798]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":320,"title":{},"body":{"components/LoginComponent.html":{},"classes/MenuMock.html":{},"components/NavSearchComponent.html":{},"classes/SearchMock.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.6.8",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{}}}],["07",{"_index":48,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{}}}],["08",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["1",{"_index":321,"title":{},"body":{"components/LoginComponent.html":{},"classes/MenuMock.html":{},"classes/SearchMock.html":{},"miscellaneous/enumerations.html":{}}}],["1.1.1",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":49,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["17",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["2",{"_index":322,"title":{},"body":{"components/LoginComponent.html":{},"classes/MenuMock.html":{},"classes/SearchMock.html":{},"miscellaneous/enumerations.html":{}}}],["2.5.4",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":47,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["28",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{}}}],["3",{"_index":420,"title":{},"body":{"classes/MenuMock.html":{},"classes/SearchMock.html":{}}}],["3/3",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{}}}],["4",{"_index":424,"title":{},"body":{"classes/MenuMock.html":{}}}],["4/4",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":428,"title":{},"body":{"classes/MenuMock.html":{},"overview.html":{}}}],["5/5",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":432,"title":{},"body":{"classes/MenuMock.html":{},"overview.html":{}}}],["6.0.0",{"_index":613,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["6.0.3",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["6.4.2",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":436,"title":{},"body":{"classes/MenuMock.html":{},"overview.html":{}}}],["7/7",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":440,"title":{},"body":{"classes/MenuMock.html":{}}}],["9",{"_index":444,"title":{},"body":{"classes/MenuMock.html":{},"overview.html":{}}}],["9/10",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["absolut",{"_index":391,"title":{},"body":{"classes/MenuItem.html":{}}}],["accord",{"_index":220,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["account",{"_index":489,"title":{},"body":{"components/NavComponent.html":{}}}],["account_box",{"_index":488,"title":{},"body":{"components/NavComponent.html":{}}}],["action",{"_index":311,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["actual",{"_index":393,"title":{},"body":{"classes/MenuItem.html":{}}}],["actual_compon",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["adapt",{"_index":695,"title":{},"body":{"index.html":{}}}],["angular",{"_index":638,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":687,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":269,"title":{},"body":{"modules/CoreModule.html":{},"components/NavComponent.html":{}}}],["angular/common",{"_index":260,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":267,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compil",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":262,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":566,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/LoginGuard.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":10,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["apierror",{"_index":1,"title":{"classes/APIError.html":{}},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"coverage.html":{}}}],["apirespons",{"_index":37,"title":{"classes/APIResponse.html":{}},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"coverage.html":{}}}],["apiservic",{"_index":56,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["app",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app'",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["app.compon",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":66,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["application'",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{}}}],["appmodul",{"_index":157,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":166,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arechildrenopen",{"_index":367,"title":{},"body":{"classes/MenuItem.html":{}}}],["artifact",{"_index":650,"title":{},"body":{"index.html":{}}}],["assign",{"_index":414,"title":{},"body":{"classes/MenuMock.html":{}}}],["associ",{"_index":29,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["attribut",{"_index":306,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["auth/authentication.servic",{"_index":228,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["authent",{"_index":222,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{}}}],["authenticationservic",{"_index":89,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"coverage.html":{}}}],["authguard",{"_index":199,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authguardservic",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["author",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuMock.html":{}}}],["automat",{"_index":646,"title":{},"body":{"index.html":{}}}],["avail",{"_index":702,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["basic",{"_index":52,"title":{},"body":{"classes/APIResponse.html":{}}}],["beta.17",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["bind",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["boolean",{"_index":41,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["breakpoint",{"_index":472,"title":{},"body":{"components/NavComponent.html":{}}}],["breakpointobserv",{"_index":457,"title":{},"body":{"components/NavComponent.html":{}}}],["brows",{"_index":700,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":417,"title":{},"body":{"classes/MenuMock.html":{},"index.html":{}}}],["button",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["camacho",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuMock.html":{}}}],["campu",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["canactiv",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["chang",{"_index":293,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"index.html":{}}}],["changeloginopt",{"_index":299,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeloginoption(opt",{"_index":304,"title":{},"body":{"components/LoginComponent.html":{}}}],["changepassword",{"_index":300,"title":{},"body":{"components/LoginComponent.html":{}}}],["changepasswordinput",{"_index":243,"title":{"classes/ChangePasswordInput.html":{}},"body":{"classes/ChangePasswordInput.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["check",{"_index":226,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"index.html":{}}}],["children",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/MenuItem.html":{}}}],["class",{"_index":0,"title":{"classes/APIError.html":{},"classes/APIResponse.html":{},"classes/ChangePasswordInput.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"classes/SigningInput.html":{}},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":639,"title":{},"body":{"index.html":{}}}],["click",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["clientmessag",{"_index":15,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["close",{"_index":379,"title":{},"body":{"classes/MenuItem.html":{},"components/NavComponent.html":{}}}],["cluster_appmodul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":250,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":251,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_import",{"_index":252,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_mainmodul",{"_index":358,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declar",{"_index":359,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_import",{"_index":360,"title":{},"body":{"modules/MainModule.html":{}}}],["cluster_sharedmodul",{"_index":551,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":552,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":553,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":16,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"index.html":{}}}],["commonmodul",{"_index":259,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{}}}],["compat",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["compodoc",{"_index":679,"title":{},"body":{"index.html":{}}}],["compon",{"_index":65,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["components/footer/footer.compon",{"_index":274,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/nav",{"_index":567,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/nav/nav.compon",{"_index":275,"title":{},"body":{"modules/CoreModule.html":{}}}],["const",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"classes/MenuMock.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["constructor(auth",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["constructor(breakpointobserv",{"_index":456,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(email",{"_index":247,"title":{},"body":{"classes/ChangePasswordInput.html":{}}}],["constructor(id",{"_index":371,"title":{},"body":{"classes/MenuItem.html":{}}}],["constructor(nam",{"_index":538,"title":{},"body":{"classes/SearchItem.html":{}}}],["constructor(priv",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["constructor(publ",{"_index":230,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["constructor(usernam",{"_index":353,"title":{},"body":{"classes/LoginInput.html":{},"classes/SigningInput.html":{}}}],["contain",{"_index":688,"title":{},"body":{"index.html":{}}}],["contraseña",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":217,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{}}}],["core",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["core/auth/authentication.servic",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["core/core.modul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guard",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodul",{"_index":62,"title":{"modules/CoreModule.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/LoginGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"modules.html":{},"overview.html":{}}}],["coverag",{"_index":586,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["criteria",{"_index":512,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["current",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{}}}],["current'",{"_index":382,"title":{},"body":{"classes/MenuItem.html":{}}}],["dashboard",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["data.name.tolowercase().indexof(this.query.tolowercas",{"_index":528,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["dataset",{"_index":501,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["date",{"_index":46,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["declar",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["delet",{"_index":421,"title":{},"body":{"classes/MenuMock.html":{}}}],["depend",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":464,"title":{},"body":{"components/NavComponent.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["dev",{"_index":644,"title":{},"body":{"index.html":{}}}],["develop",{"_index":32,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"index.html":{}}}],["devic",{"_index":465,"title":{},"body":{"components/NavComponent.html":{}}}],["direct",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":649,"title":{},"body":{"index.html":{}}}],["directori",{"_index":652,"title":{},"body":{"index.html":{}}}],["display",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":651,"title":{},"body":{"index.html":{}}}],["doc",{"_index":663,"title":{},"body":{"index.html":{}}}],["document",{"_index":587,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dologin",{"_index":301,"title":{},"body":{"components/LoginComponent.html":{}}}],["dom",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["dosign",{"_index":302,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynam",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":658,"title":{},"body":{"index.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["element.nam",{"_index":529,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["email",{"_index":246,"title":{},"body":{"classes/ChangePasswordInput.html":{},"classes/SigningInput.html":{}}}],["enabl",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":656,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":629,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviar",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{}}}],["environ",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.product",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":9,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["everytim",{"_index":511,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["exampl",{"_index":12,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["except",{"_index":34,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["execut",{"_index":309,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["exist",{"_index":40,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["fals",{"_index":232,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"components/NavSearchComponent.html":{}}}],["favorit",{"_index":429,"title":{},"body":{"classes/MenuMock.html":{}}}],["federico",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuMock.html":{}}}],["field",{"_index":8,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/LoginComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":316,"title":{},"body":{"components/LoginComponent.html":{}}}],["filter",{"_index":517,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["filter(data",{"_index":527,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["filteredset",{"_index":496,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["fire",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":654,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":261,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{}}}],["folder",{"_index":664,"title":{},"body":{"index.html":{}}}],["follow",{"_index":689,"title":{},"body":{"index.html":{}}}],["footer",{"_index":278,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["footer.component.html",{"_index":281,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":280,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":143,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpassword",{"_index":297,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":307,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":534,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":533,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":532,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":536,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":535,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":531,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":661,"title":{},"body":{"index.html":{}}}],["full",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":680,"title":{},"body":{"index.html":{}}}],["g",{"_index":678,"title":{},"body":{"index.html":{}}}],["garberg",{"_index":669,"title":{},"body":{"index.html":{}}}],["gener",{"_index":406,"title":{},"body":{"classes/MenuMock.html":{},"index.html":{}}}],["generatemenu",{"_index":403,"title":{},"body":{"classes/MenuMock.html":{}}}],["get",{"_index":634,"title":{"index.html":{}},"body":{}}],["getsearchel",{"_index":544,"title":{},"body":{"classes/SearchMock.html":{}}}],["global",{"_index":676,"title":{},"body":{"index.html":{}}}],["go",{"_index":683,"title":{},"body":{"index.html":{}}}],["grade",{"_index":425,"title":{},"body":{"classes/MenuMock.html":{}}}],["graph",{"_index":701,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":216,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["guidelin",{"_index":666,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":671,"title":{},"body":{"index.html":{}}}],["help",{"_index":681,"title":{},"body":{"index.html":{}}}],["here",{"_index":697,"title":{},"body":{"index.html":{}}}],["hide",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":286,"title":{},"body":{"components/HomeComponent.html":{},"classes/MenuMock.html":{}}}],["home'},{'nam",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["home.component.html",{"_index":288,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":287,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":124,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["http",{"_index":28,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["http://localhost:4200",{"_index":645,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":266,"title":{},"body":{"modules/CoreModule.html":{}}}],["icon",{"_index":385,"title":{},"body":{"classes/MenuItem.html":{},"index.html":{}}}],["iconnam",{"_index":368,"title":{},"body":{"classes/MenuItem.html":{}}}],["id",{"_index":369,"title":{},"body":{"classes/MenuItem.html":{},"classes/SearchItem.html":{}}}],["identifi",{"_index":387,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["implement",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["import",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["includ",{"_index":256,"title":{},"body":{"modules/CoreModule.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"classes/SigningInput.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":38,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/NavSearchComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["iniciar",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{}}}],["init",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":55,"title":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":493,"title":{},"body":{"components/NavSearchComponent.html":{},"index.html":{}}}],["input'",{"_index":505,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["input('dataset",{"_index":521,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["input('placehold",{"_index":522,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["insid",{"_index":366,"title":{},"body":{"classes/MenuItem.html":{}}}],["instal",{"_index":675,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["internalmessag",{"_index":17,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["io",{"_index":273,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["isauthent",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ishandset",{"_index":452,"title":{},"body":{"components/NavComponent.html":{}}}],["islogin",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["ismenuopen",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["isopen",{"_index":453,"title":{},"body":{"components/NavComponent.html":{}}}],["issearch",{"_index":497,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["it'",{"_index":221,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["item",{"_index":373,"title":{},"body":{"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavSearchComponent.html":{}}}],["item.t",{"_index":364,"title":{},"body":{"classes/MenuItem.html":{},"classes/SearchItem.html":{},"coverage.html":{}}}],["item.ts:16",{"_index":374,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:2",{"_index":541,"title":{},"body":{"classes/SearchItem.html":{}}}],["item.ts:24",{"_index":380,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:3",{"_index":539,"title":{},"body":{"classes/SearchItem.html":{}}}],["item.ts:32",{"_index":383,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:40",{"_index":386,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:48",{"_index":388,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:56",{"_index":389,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.ts:64",{"_index":372,"title":{},"body":{"classes/MenuItem.html":{}}}],["item0",{"_index":409,"title":{},"body":{"classes/MenuMock.html":{}}}],["item1",{"_index":412,"title":{},"body":{"classes/MenuMock.html":{}}}],["item2",{"_index":415,"title":{},"body":{"classes/MenuMock.html":{}}}],["item3",{"_index":418,"title":{},"body":{"classes/MenuMock.html":{}}}],["item3.children",{"_index":447,"title":{},"body":{"classes/MenuMock.html":{}}}],["item4",{"_index":422,"title":{},"body":{"classes/MenuMock.html":{}}}],["item5",{"_index":426,"title":{},"body":{"classes/MenuMock.html":{}}}],["item5.children",{"_index":448,"title":{},"body":{"classes/MenuMock.html":{}}}],["item6",{"_index":430,"title":{},"body":{"classes/MenuMock.html":{}}}],["item7",{"_index":434,"title":{},"body":{"classes/MenuMock.html":{}}}],["item8",{"_index":438,"title":{},"body":{"classes/MenuMock.html":{}}}],["item9",{"_index":442,"title":{},"body":{"classes/MenuMock.html":{}}}],["js",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["lastnam",{"_index":570,"title":{},"body":{"classes/SigningInput.html":{}}}],["layout",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["layoutmodul",{"_index":268,"title":{},"body":{"modules/CoreModule.html":{}}}],["lazi",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["legend",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["level",{"_index":378,"title":{},"body":{"classes/MenuItem.html":{}}}],["load",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["loadchildren",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localhost:8080",{"_index":674,"title":{},"body":{"index.html":{}}}],["loge",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["login",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"miscellaneous/enumerations.html":{}}}],["login'},{'nam",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["login.component.html",{"_index":296,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":295,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":146,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguard",{"_index":198,"title":{"injectables/LoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/LoginGuard.html":{},"coverage.html":{}}}],["loginguardservic",{"_index":347,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["logininput",{"_index":317,"title":{"classes/LoginInput.html":{}},"body":{"components/LoginComponent.html":{},"classes/LoginInput.html":{},"coverage.html":{}}}],["loginmod",{"_index":298,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginopt",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loginoptions.login",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{}}}],["made",{"_index":667,"title":{},"body":{"index.html":{}}}],["main",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{}}}],["mainmodul",{"_index":167,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["manifest",{"_index":694,"title":{},"body":{"index.html":{}}}],["map",{"_index":474,"title":{},"body":{"components/NavComponent.html":{}}}],["map(result",{"_index":481,"title":{},"body":{"components/NavComponent.html":{}}}],["marthi",{"_index":668,"title":{},"body":{"index.html":{}}}],["matautocompletemodul",{"_index":555,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodul",{"_index":556,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodul",{"_index":557,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":51,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":384,"title":{},"body":{"classes/MenuItem.html":{},"index.html":{}}}],["matformfieldmodul",{"_index":558,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodul",{"_index":559,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodul",{"_index":560,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodul",{"_index":561,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodul",{"_index":562,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodul",{"_index":564,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodul",{"_index":563,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodul",{"_index":565,"title":{},"body":{"modules/SharedModule.html":{}}}],["memberof",{"_index":42,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["menu",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{}}}],["menuitem",{"_index":362,"title":{"classes/MenuItem.html":{}},"body":{"classes/MenuItem.html":{},"classes/MenuMock.html":{},"coverage.html":{}}}],["menuitem(0",{"_index":410,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(1",{"_index":413,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(2",{"_index":416,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(3",{"_index":419,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(4",{"_index":423,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(5",{"_index":427,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(6",{"_index":431,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(7",{"_index":435,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(8",{"_index":439,"title":{},"body":{"classes/MenuMock.html":{}}}],["menuitem(9",{"_index":443,"title":{},"body":{"classes/MenuMock.html":{}}}],["menumock",{"_index":399,"title":{"classes/MenuMock.html":{}},"body":{"classes/MenuMock.html":{},"coverage.html":{}}}],["menutoggl",{"_index":455,"title":{},"body":{"components/NavComponent.html":{}}}],["menutoggled(isopen",{"_index":459,"title":{},"body":{"components/NavComponent.html":{}}}],["messag",{"_index":23,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/NavComponent.html":{}}}],["metadata",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["method",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchMock.html":{}}}],["mi",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{}}}],["miscellan",{"_index":628,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":466,"title":{},"body":{"components/NavComponent.html":{}}}],["mock",{"_index":402,"title":{},"body":{"classes/MenuMock.html":{},"components/NavComponent.html":{}}}],["mock.t",{"_index":401,"title":{},"body":{"classes/MenuMock.html":{},"classes/SearchMock.html":{},"coverage.html":{}}}],["mock.ts:19",{"_index":404,"title":{},"body":{"classes/MenuMock.html":{}}}],["mock.ts:3",{"_index":545,"title":{},"body":{"classes/SearchMock.html":{}}}],["mock.ts:39",{"_index":405,"title":{},"body":{"classes/MenuMock.html":{}}}],["mock.ts:6",{"_index":546,"title":{},"body":{"classes/SearchMock.html":{}}}],["mocks/search",{"_index":477,"title":{},"body":{"components/NavComponent.html":{}}}],["model",{"_index":365,"title":{},"body":{"classes/MenuItem.html":{},"components/NavSearchComponent.html":{}}}],["modul",{"_index":156,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/main/main.modul",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/main/pag",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["more",{"_index":682,"title":{},"body":{"index.html":{}}}],["music",{"_index":446,"title":{},"body":{"classes/MenuMock.html":{}}}],["music_not",{"_index":445,"title":{},"body":{"classes/MenuMock.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/ChangePasswordInput.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{},"index.html":{}}}],["nav",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["nav'},{'nam",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["nav.component.html",{"_index":451,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":450,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["navcompon",{"_index":148,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":219,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"index.html":{}}}],["navsearchcompon",{"_index":150,"title":{"components/NavSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":670,"title":{},"body":{"index.html":{}}}],["new",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{},"classes/MenuMock.html":{},"classes/SearchMock.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodul",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["ngx",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["node_modules/@angular/material/prebuilt",{"_index":690,"title":{},"body":{"index.html":{}}}],["notfoundcompon",{"_index":153,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MainModule.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notif",{"_index":487,"title":{},"body":{"components/NavComponent.html":{}}}],["npm",{"_index":677,"title":{},"body":{"index.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/LoginComponent.html":{},"classes/MenuItem.html":{}}}],["observ",{"_index":462,"title":{},"body":{"components/NavComponent.html":{}}}],["olvid",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["opcion",{"_index":411,"title":{},"body":{"classes/MenuMock.html":{}}}],["open",{"_index":345,"title":{},"body":{"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"index.html":{}}}],["option",{"_index":43,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/ChangePasswordInput.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{}}}],["options.t",{"_index":631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":703,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":607,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoginGuard.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{}}}],["palett",{"_index":441,"title":{},"body":{"classes/MenuMock.html":{}}}],["param",{"_index":229,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["paramet",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/ChangePasswordInput.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{}}}],["parent",{"_index":375,"title":{},"body":{"classes/MenuItem.html":{}}}],["password",{"_index":294,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginInput.html":{},"classes/SigningInput.html":{},"miscellaneous/enumerations.html":{}}}],["password.t",{"_index":245,"title":{},"body":{"classes/ChangePasswordInput.html":{},"coverage.html":{}}}],["password.ts:3",{"_index":248,"title":{},"body":{"classes/ChangePasswordInput.html":{}}}],["passwordcheck",{"_index":571,"title":{},"body":{"classes/SigningInput.html":{}}}],["path",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/MenuItem.html":{}}}],["path/to/module#othermodul",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":310,"title":{},"body":{"components/LoginComponent.html":{}}}],["person",{"_index":486,"title":{},"body":{"components/NavComponent.html":{}}}],["pink.css",{"_index":692,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":480,"title":{},"body":{"components/NavComponent.html":{}}}],["placehold",{"_index":502,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["prod",{"_index":653,"title":{},"body":{"index.html":{}}}],["product",{"_index":655,"title":{},"body":{"index.html":{}}}],["project",{"_index":637,"title":{},"body":{"index.html":{}}}],["properti",{"_index":14,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/ChangePasswordInput.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{},"index.html":{}}}],["protractor",{"_index":660,"title":{},"body":{"index.html":{}}}],["provid",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["providedin",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoginGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["public",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchMock.html":{}}}],["pwa",{"_index":696,"title":{},"body":{"index.html":{}}}],["queri",{"_index":498,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["querychang",{"_index":499,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["querychanged(queri",{"_index":508,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["readm",{"_index":684,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":44,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["redirectto",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reflect",{"_index":376,"title":{},"body":{"classes/MenuItem.html":{}}}],["registrars",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{}}}],["rel",{"_index":392,"title":{},"body":{"classes/MenuItem.html":{}}}],["reload",{"_index":647,"title":{},"body":{"index.html":{}}}],["repres",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuItem.html":{}}}],["request",{"_index":45,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["reset",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["respons",{"_index":11,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["response.t",{"_index":6,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"coverage.html":{}}}],["response.ts:15",{"_index":54,"title":{},"body":{"classes/APIResponse.html":{}}}],["response.ts:23",{"_index":53,"title":{},"body":{"classes/APIResponse.html":{}}}],["response.ts:40",{"_index":33,"title":{},"body":{"classes/APIError.html":{}}}],["response.ts:48",{"_index":30,"title":{},"body":{"classes/APIError.html":{}}}],["response.ts:56",{"_index":22,"title":{},"body":{"classes/APIError.html":{}}}],["response.ts:64",{"_index":27,"title":{},"body":{"classes/APIError.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.match",{"_index":482,"title":{},"body":{"components/NavComponent.html":{}}}],["retriev",{"_index":470,"title":{},"body":{"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["return",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchMock.html":{}}}],["root",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["root'},{'nam",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["rout",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["router",{"_index":223,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["routerlink",{"_index":390,"title":{},"body":{"classes/MenuItem.html":{}}}],["routermodul",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["routermodule.forroot(rout",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":642,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":473,"title":{},"body":{"components/NavComponent.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":475,"title":{},"body":{"components/NavComponent.html":{}}}],["sc",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["scaffold",{"_index":648,"title":{},"body":{"index.html":{}}}],["searc",{"_index":515,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search",{"_index":471,"title":{},"body":{"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["search'},{'nam",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["search.compon",{"_index":568,"title":{},"body":{"modules/SharedModule.html":{}}}],["search.component.html",{"_index":495,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.scss",{"_index":494,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.t",{"_index":492,"title":{},"body":{"components/NavSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:25",{"_index":504,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:33",{"_index":506,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:41",{"_index":516,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:49",{"_index":518,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:57",{"_index":503,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:69",{"_index":507,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:79",{"_index":509,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search.component.ts:93",{"_index":514,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["search/nav",{"_index":491,"title":{},"body":{"components/NavSearchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["searchel",{"_index":454,"title":{},"body":{"components/NavComponent.html":{}}}],["searchitem",{"_index":468,"title":{"classes/SearchItem.html":{}},"body":{"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"coverage.html":{}}}],["searchitem('asd",{"_index":549,"title":{},"body":{"classes/SearchMock.html":{}}}],["searchitem('chao",{"_index":548,"title":{},"body":{"classes/SearchMock.html":{}}}],["searchitem('dfg",{"_index":550,"title":{},"body":{"classes/SearchMock.html":{}}}],["searchitem('hola",{"_index":547,"title":{},"body":{"classes/SearchMock.html":{}}}],["searchmock",{"_index":476,"title":{"classes/SearchMock.html":{}},"body":{"components/NavComponent.html":{},"classes/SearchMock.html":{},"coverage.html":{}}}],["searchmock.getsearchel",{"_index":484,"title":{},"body":{"components/NavComponent.html":{}}}],["second",{"_index":377,"title":{},"body":{"classes/MenuItem.html":{}}}],["secur",{"_index":433,"title":{},"body":{"classes/MenuMock.html":{}}}],["see",{"_index":662,"title":{},"body":{"index.html":{}}}],["select",{"_index":370,"title":{},"body":{"classes/MenuItem.html":{},"components/NavSearchComponent.html":{}}}],["selectel",{"_index":500,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["selectelement(el",{"_index":513,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["selector",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["serv",{"_index":643,"title":{},"body":{"index.html":{}}}],["server",{"_index":641,"title":{},"body":{"index.html":{}}}],["servic",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{}}}],["serviceworkermodul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('/ngsw",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["sesión",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{}}}],["session",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sessionstorage.getitem('token",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["set",{"_index":469,"title":{},"body":{"components/NavComponent.html":{}}}],["shared/enum",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{}}}],["shared/model",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"classes/SearchMock.html":{}}}],["shared/shared.modul",{"_index":276,"title":{},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{}}}],["sharedmodul",{"_index":254,"title":{"modules/SharedModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":24,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{}}}],["shown/hidden",{"_index":461,"title":{},"body":{"components/NavComponent.html":{}}}],["side",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/MenuItem.html":{},"components/NavComponent.html":{}}}],["sign",{"_index":292,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["signin",{"_index":324,"title":{},"body":{"components/LoginComponent.html":{}}}],["signinginput",{"_index":323,"title":{"classes/SigningInput.html":{}},"body":{"components/LoginComponent.html":{},"classes/SigningInput.html":{},"coverage.html":{}}}],["singleton",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{}}}],["smart",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["socket",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["socketiomodul",{"_index":270,"title":{},"body":{"modules/CoreModule.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/ChangePasswordInput.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"modules/MainModule.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{},"classes/SearchItem.html":{},"classes/SearchMock.html":{},"modules/SharedModule.html":{},"classes/SigningInput.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["specif",{"_index":31,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{}}}],["src/.../login",{"_index":630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/api/api.service.t",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/core/api/api.service.ts:7",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/user.service.t",{"_index":581,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/api/user.service.ts:7",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/auth/authentication.service.t",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/auth/authentication.service.ts:14",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/auth/authentication.service.ts:28",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/components/footer/footer.component.t",{"_index":277,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/components/footer/footer.component.ts:12",{"_index":283,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/components/footer/footer.component.ts:8",{"_index":282,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/components/nav/nav.component.t",{"_index":449,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/core/components/nav/nav.component.ts:28",{"_index":463,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/components/nav/nav.component.ts:36",{"_index":467,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/components/nav/nav.component.ts:44",{"_index":458,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/components/nav/nav.component.ts:68",{"_index":460,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/core/core.module.t",{"_index":255,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/auth.guard.t",{"_index":215,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":224,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:25",{"_index":227,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:33",{"_index":225,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/core/guards/login.guard.t",{"_index":343,"title":{},"body":{"injectables/LoginGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/login.guard.ts:17",{"_index":346,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["src/app/core/guards/login.guard.ts:25",{"_index":349,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["src/app/core/guards/login.guard.ts:33",{"_index":348,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["src/app/core/mocks/menu",{"_index":400,"title":{},"body":{"classes/MenuMock.html":{},"coverage.html":{}}}],["src/app/core/mocks/search",{"_index":542,"title":{},"body":{"classes/SearchMock.html":{},"coverage.html":{}}}],["src/app/core/services/util.service.t",{"_index":584,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["src/app/core/services/util.service.ts:7",{"_index":585,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/modules/main/main.module.t",{"_index":361,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/modules/main/pages/home/home.component.t",{"_index":285,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/main/pages/home/home.component.ts:12",{"_index":290,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/main/pages/home/home.component.ts:8",{"_index":289,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.t",{"_index":291,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:101",{"_index":313,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:27",{"_index":315,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:36",{"_index":318,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:44",{"_index":319,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:52",{"_index":303,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:66",{"_index":314,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:74",{"_index":305,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:83",{"_index":308,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/login/login.component.ts:92",{"_index":312,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/main/pages/not",{"_index":530,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/nav",{"_index":490,"title":{},"body":{"components/NavSearchComponent.html":{},"coverage.html":{}}}],["src/app/shared/enums/login",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/api",{"_index":5,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"coverage.html":{}}}],["src/app/shared/models/chang",{"_index":244,"title":{},"body":{"classes/ChangePasswordInput.html":{},"coverage.html":{}}}],["src/app/shared/models/login.t",{"_index":351,"title":{},"body":{"classes/LoginInput.html":{},"coverage.html":{}}}],["src/app/shared/models/login.ts:3",{"_index":355,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/app/shared/models/login.ts:4",{"_index":354,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/app/shared/models/menu",{"_index":363,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["src/app/shared/models/search",{"_index":537,"title":{},"body":{"classes/SearchItem.html":{},"coverage.html":{}}}],["src/app/shared/models/signing.t",{"_index":569,"title":{},"body":{"classes/SigningInput.html":{},"coverage.html":{}}}],["src/app/shared/models/signing.ts:3",{"_index":575,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/models/signing.ts:4",{"_index":574,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/models/signing.ts:5",{"_index":573,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/models/signing.ts:6",{"_index":576,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/models/signing.ts:7",{"_index":577,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/models/signing.ts:8",{"_index":572,"title":{},"body":{"classes/SigningInput.html":{}}}],["src/app/shared/shared.module.t",{"_index":554,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/styles.scss",{"_index":693,"title":{},"body":{"index.html":{}}}],["start",{"_index":635,"title":{"index.html":{}},"body":{}}],["statement",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":543,"title":{},"body":{"classes/SearchMock.html":{}}}],["storag",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store",{"_index":381,"title":{},"body":{"classes/MenuItem.html":{},"classes/MenuMock.html":{},"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"classes/ChangePasswordInput.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{}}}],["structur",{"_index":665,"title":{},"body":{"index.html":{}}}],["style",{"_index":519,"title":{},"body":{"components/NavSearchComponent.html":{},"index.html":{}}}],["styleurl",{"_index":279,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["support",{"_index":698,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":699,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":672,"title":{},"body":{"index.html":{}}}],["templat",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["templateurl",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["test",{"_index":657,"title":{},"body":{"index.html":{}}}],["theme",{"_index":686,"title":{},"body":{"index.html":{}}}],["themes/indigo",{"_index":691,"title":{},"body":{"index.html":{}}}],["this.auth.isauthent",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":479,"title":{},"body":{"components/NavComponent.html":{}}}],["this.dataset",{"_index":526,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["this.email",{"_index":249,"title":{},"body":{"classes/ChangePasswordInput.html":{},"classes/SigningInput.html":{}}}],["this.filteredset",{"_index":525,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["this.forgotpassword",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.generatemenu",{"_index":408,"title":{},"body":{"classes/MenuMock.html":{}}}],["this.iconnam",{"_index":396,"title":{},"body":{"classes/MenuItem.html":{}}}],["this.id",{"_index":394,"title":{},"body":{"classes/MenuItem.html":{},"classes/SearchItem.html":{}}}],["this.ishandset",{"_index":478,"title":{},"body":{"components/NavComponent.html":{}}}],["this.islogin",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":485,"title":{},"body":{"components/NavComponent.html":{}}}],["this.issearch",{"_index":524,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["this.lastnam",{"_index":579,"title":{},"body":{"classes/SigningInput.html":{}}}],["this.login",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginmod",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menu",{"_index":407,"title":{},"body":{"classes/MenuMock.html":{}}}],["this.nam",{"_index":395,"title":{},"body":{"classes/MenuItem.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{}}}],["this.password",{"_index":357,"title":{},"body":{"classes/LoginInput.html":{},"classes/SigningInput.html":{}}}],["this.passwordcheck",{"_index":578,"title":{},"body":{"classes/SigningInput.html":{}}}],["this.path",{"_index":397,"title":{},"body":{"classes/MenuItem.html":{}}}],["this.queri",{"_index":523,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["this.router.navigate(['dashboard",{"_index":350,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["this.router.navigate(['login",{"_index":231,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.searchel",{"_index":483,"title":{},"body":{"components/NavComponent.html":{}}}],["this.select",{"_index":398,"title":{},"body":{"classes/MenuItem.html":{}}}],["this.sign",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.titl",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usernam",{"_index":356,"title":{},"body":{"classes/LoginInput.html":{},"classes/SigningInput.html":{}}}],["titl",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesidemenu",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["toy",{"_index":437,"title":{},"body":{"classes/MenuMock.html":{}}}],["tree",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["tri",{"_index":344,"title":{},"body":{"injectables/LoginGuard.html":{}}}],["trigger",{"_index":510,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["true",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{},"components/NavSearchComponent.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"classes/ChangePasswordInput.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"classes/LoginInput.html":{},"classes/MenuItem.html":{},"classes/MenuMock.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"classes/SearchItem.html":{},"classes/SigningInput.html":{},"coverage.html":{}}}],["us",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/MenuItem.html":{},"index.html":{}}}],["user",{"_index":25,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/LoginGuard.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{}}}],["user'",{"_index":218,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoginGuard.html":{}}}],["usernam",{"_index":352,"title":{},"body":{"classes/LoginInput.html":{},"classes/SigningInput.html":{}}}],["userservic",{"_index":580,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["util",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{}}}],["utilservic",{"_index":583,"title":{"injectables/UtilService.html":{}},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["valu",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["var",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["version",{"_index":640,"title":{},"body":{"index.html":{}}}],["via",{"_index":659,"title":{},"body":{"index.html":{}}}],["void",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/NavSearchComponent.html":{},"components/NotFoundComponent.html":{}}}],["want",{"_index":673,"title":{},"body":{"index.html":{}}}],["webappl",{"_index":636,"title":{},"body":{"index.html":{}}}],["wether",{"_index":39,"title":{},"body":{"classes/APIError.html":{},"classes/APIResponse.html":{},"components/NavComponent.html":{}}}],["without",{"_index":685,"title":{},"body":{"index.html":{}}}],["work",{"_index":284,"title":{},"body":{"components/FooterComponent.html":{},"components/NotFoundComponent.html":{}}}],["worker",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.j",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["wrote",{"_index":520,"title":{},"body":{"components/NavSearchComponent.html":{}}}],["ye",{"_index":540,"title":{},"body":{"classes/SearchItem.html":{}}}],["zone.j",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MainModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/APIError.html":{"url":"classes/APIError.html","title":"class - APIError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/api-response.ts\n        \n\n            \n                Description\n            \n            \n                Fields of error of API Response\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientMessage\n                            \n                            \n                                code\n                            \n                            \n                                internalMessage\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clientMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:56\n                            \n                        \n\n                \n                    \n                        Error Message to show to the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        code:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:64\n                            \n                        \n\n                \n                    \n                        HTTP Response code associated with the error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:48\n                            \n                        \n\n                \n                    \n                        Specific error message (for developers).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:40\n                            \n                        \n\n                \n                    \n                        API exception name associated with this error.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class APIResponse {\n    /**\n     * Indicates wether the response exists or not.\n     *\n     * @type {boolean}\n     * @memberof APIResponse\n     */\n    response: boolean;\n\n    /**\n     * Optional field that is received if the request had an error.\n     *\n     * @type {APIError}\n     * @memberof APIResponse\n     */\n    error?: APIError;\n}\n\n/**\n *Fields of error of API Response\n *\n * @date 2018-07-14\n * @export\n * @class APIError\n */\nexport class APIError {\n    /**\n     * API exception name associated with this error.\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    type: string;\n\n    /**\n     * Specific error message (for developers).\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    internalMessage: string;\n\n    /**\n     * Error Message to show to the user.\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    clientMessage: string;\n\n    /**\n     * HTTP Response code associated with the error.\n     *\n     * @type {number}\n     * @memberof APIError\n     */\n    code: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIResponse.html":{"url":"classes/APIResponse.html","title":"class - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/api-response.ts\n        \n\n            \n                Description\n            \n            \n                Basic fields for API Responses.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                response\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     APIError\n\n                    \n                \n                    \n                        \n                            Type :     APIError\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:23\n                            \n                        \n\n                \n                    \n                        Optional field that is received if the request had an error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        response:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/api-response.ts:15\n                            \n                        \n\n                \n                    \n                        Indicates wether the response exists or not.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class APIResponse {\n    /**\n     * Indicates wether the response exists or not.\n     *\n     * @type {boolean}\n     * @memberof APIResponse\n     */\n    response: boolean;\n\n    /**\n     * Optional field that is received if the request had an error.\n     *\n     * @type {APIError}\n     * @memberof APIResponse\n     */\n    error?: APIError;\n}\n\n/**\n *Fields of error of API Response\n *\n * @date 2018-07-14\n * @export\n * @class APIError\n */\nexport class APIError {\n    /**\n     * API exception name associated with this error.\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    type: string;\n\n    /**\n     * Specific error message (for developers).\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    internalMessage: string;\n\n    /**\n     * Error Message to show to the user.\n     *\n     * @type {string}\n     * @memberof APIError\n     */\n    clientMessage: string;\n\n    /**\n     * HTTP Response code associated with the error.\n     *\n     * @type {number}\n     * @memberof APIError\n     */\n    code: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/api/api.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CoreModule } from '../core.module';\n\n@Injectable({\n  providedIn: CoreModule\n})\nexport class ApiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Application's main Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLogin\n                            \n                            \n                                    Public\n                                isMenuOpened\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleSideMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Ng on init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSideMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSideMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method fired when Navbar button is clicked.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n                \n                    \n                        Represents if the user is loged or not. Is used to hide and show dashboard elements in login page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMenuOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isMenuOpened:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Binded to side bar menu display.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Application Title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './core/auth/authentication.service';\n\n/**\n * Application's main Component\n *\n * @date 2018-06-28\n * @export\n * @class AppComponent\n */\n@Component({\n  selector: 'sc-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * Represents if the user is loged or not. Is used to hide and show dashboard elements in login page.\n   *\n   * @type {boolean}\n   * @memberof AppComponent\n   */\n  public isLogin: boolean;\n\n  /**\n   * Binded to side bar menu display.\n   *\n   * @type {boolean}\n   * @memberof HomeComponent\n   */\n  public isMenuOpened: boolean;\n\n  /**\n   * Application Title\n   *\n   * @type {string}\n   * @memberof AppComponent\n   */\n  public title: string;\n\n  /**\n   * Creates an instance of AppComponent.\n   * @date 2018-07-07\n   * @memberof AppComponent\n   */\n  constructor(private auth: AuthenticationService) {\n    this.isMenuOpened = true;\n    this.title = 'Smart Campus';\n  }\n\n  /**\n   *Ng on init\n   *\n   * @memberof AppComponent\n   */\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) { this.isLogin = true; }\n  }\n\n  /**\n   *Method fired when Navbar button is clicked.\n   *\n   * @author Federico Camacho\n   * @date 2018-06-30\n   * @memberof HomeComponent\n   */\n  public toggleSideMenu(): void {\n    this.isMenuOpened = !this.isMenuOpened;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    MainModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { CoreModule } from './core/core.module';\nimport { MainModule } from './modules/main/main.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MainModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent, NotFoundComponent, HomeComponent } from './modules/main/pages';\nimport { LoginGuard, AuthGuard } from './core/guards';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [ LoginGuard ]\n  },\n  {\n    path: 'dashboard',\n    component: HomeComponent,\n    children: [ ],\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full',\n  },\n  /*\n    For other modules use Lazy Loading with:\n  {\n    path: 'other',\n    loadChildren: 'path/to/module#OtherModule',\n    canActivate: [ AuthGuardService ]\n  }\n  */\n  {\n    path: 'not-found',\n    pathMatch: 'full',\n    component: NotFoundComponent\n  }\n];\n\n/**\n * App's Root Routing Module.\n *\n * @date 2018-06-28\n * @export\n * @class AppRoutingModule\n */\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/auth.guard.ts\n        \n\n            \n                Description\n            \n            \n                Routing guard to control user's navigation according if it's authenticated or not\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/guards/auth.guard.ts:33\n                            \n                        \n\n\n                \n                    \n                            Routing Guard method to check if user's authenticated or not.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/auth.guard.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/auth.guard.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { CoreModule } from '../core.module';\nimport { AuthenticationService } from '../auth/authentication.service';\n\n/**\n * Routing guard to control user's navigation according if it's authenticated or not\n *\n * @date 2018-06-28\n * @export\n * @class AuthGuardService\n * @implements {CanActivate}\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Creates an instance of AuthGuardService.\n   * @param {AuthenticationService} auth\n   * @param {Router} router\n   * @memberof AuthGuardService\n   */\n  constructor(public auth: AuthenticationService, public router: Router) { }\n\n  /**\n   * Routing Guard method to check if user's authenticated or not.\n   *\n   * @returns {boolean}\n   * @memberof AuthGuardService\n   */\n  public canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to control Authentication\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthenticationService.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth/authentication.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Checks if user is currently authenticated checking token in session storage.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CoreModule } from '../core.module';\n\n/**\n * Service to control Authentication\n *\n * @date 2018-06-28\n * @export\n * @class AuthenticationService\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthenticationService {\n\n  /**\n   * Creates an instance of AuthenticationService.\n   * @memberof AuthenticationService\n   */\n  constructor() { }\n\n  /**\n   * Checks if user is currently authenticated checking token in session storage.\n   *\n   * @returns {boolean}\n   * @memberof AuthenticationService\n   */\n  public isAuthenticated(): boolean {\n    const token = sessionStorage.getItem('token');\n    return (token && token !== '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordInput.html":{"url":"classes/ChangePasswordInput.html","title":"class - ChangePasswordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/change-password.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/change-password.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/change-password.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePasswordInput {\n\n    email: string;\n\n    constructor(email = '') {\n        this.email = email;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nCoreModule -->\n\nNavComponent->CoreModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nNavComponent \n\nNavComponent \n\nNavComponent  -->\n\nCoreModule->NavComponent \n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nCoreModule->SharedModule \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module which includes Application's main utils and singleton services. This module is only imported by AppModule.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                NavComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    NavComponent\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { SocketIoModule } from 'ngx-socket-io';\n\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { SharedModule } from '../shared/shared.module';\n\n/**\n * Module which includes Application's main utils and singleton services. This module is only imported by AppModule.\n *\n * @date 2018-06-28\n * @export\n * @class CoreModule\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    SocketIoModule,\n    LayoutModule,\n    SharedModule\n  ],\n  declarations: [\n    FooterComponent,\n    NavComponent\n  ],\n  exports: [\n    CommonModule,\n    FlexLayoutModule,\n    FooterComponent,\n    FormsModule,\n    HttpClientModule,\n    NavComponent,\n    SharedModule,\n    SocketIoModule\n  ],\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/components/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  footer works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  footer works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main/pages/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main/pages/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/home/home.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main/pages/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login, Signing and Change password component for the application.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                loginMode\n                            \n                            \n                                    Public\n                                signing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLoginOption\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                doLogin\n                            \n                            \n                                    Public\n                                doSigning\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main/pages/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of LoginComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeLoginOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeLoginOption(option: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Changes LoginMode attribute to change the currently displayed form.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Executed when the user performs the change password action.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Executed when the user performs the login action.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doSigning\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doSigning()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:101\n                            \n                        \n\n\n                \n                    \n                            Executed when the user performs the signing action.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forgotPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forgotPassword:     ChangePasswordInput\n\n                    \n                \n                    \n                        \n                            Type :     ChangePasswordInput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Includes the fields filled by the user to change the password.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login:     LoginInput\n\n                    \n                \n                    \n                        \n                            Type :     LoginInput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                        Includes the fields filled by the user when is executing a login.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginMode:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:44\n                            \n                        \n\n                \n                    \n                        Binded to the form to be displayed (LOGIN = 0, SIGNING = 1, PASSWORD = 2).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signing:     SigningInput\n\n                    \n                \n                    \n                        \n                            Type :     SigningInput\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main/pages/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                        Includes the fields filled by the user to signin.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoginOptions } from '../../../../shared/enums';\nimport { LoginInput, SigningInput, ChangePasswordInput } from '../../../../shared/models';\n\n/**\n * Login, Signing and Change password component for the application.\n * @date 2018-08-17\n * @export\n * @class LoginComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'sc-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n\n  /**\n   * Includes the fields filled by the user to change the password.\n   *\n   * @type {ChangePasswordInput}\n   * @memberof LoginComponent\n   */\n  public forgotPassword: ChangePasswordInput;\n\n\n  /**\n   * Includes the fields filled by the user when is executing a login.\n   *\n   * @type {LoginInput}\n   * @memberof LoginComponent\n   */\n  public login: LoginInput;\n\n  /**\n   * Binded to the form to be displayed (LOGIN = 0, SIGNING = 1, PASSWORD = 2).\n   *\n   * @type {number}\n   * @memberof LoginComponent\n   */\n  public loginMode: number;\n\n  /**\n   * Includes the fields filled by the user to signin.\n   *\n   * @type {SigningInput}\n   * @memberof LoginComponent\n   */\n  public signing: SigningInput;\n\n  /**\n   * Creates an instance of LoginComponent.\n   * @date 2018-08-17\n   * @memberof LoginComponent\n   */\n  constructor() {\n    this.loginMode = LoginOptions.LOGIN;\n    this.login = new LoginInput();\n    this.signing = new SigningInput();\n    this.forgotPassword = new ChangePasswordInput();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Changes LoginMode attribute to change the currently displayed form.\n   * @date 2018-08-17\n   * @param {number} option\n   * @memberof LoginComponent\n   */\n  public changeLoginOption(option: number) {\n    this.loginMode = option;\n  }\n\n  /**\n   * Executed when the user performs the change password action.\n   * @date 2018-08-17\n   * @memberof LoginComponent\n   */\n  public changePassword(): void {\n\n  }\n\n  /**\n   * Executed when the user performs the login action.\n   * @date 2018-08-17\n   * @memberof LoginComponent\n   */\n  public doLogin(): void {\n\n  }\n\n  /**\n   * Executed when the user performs the signing action.\n   * @date 2018-08-17\n   * @memberof LoginComponent\n   */\n  public doSigning(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n            \n            \n            \n              \n            \n          \n          \n            Iniciar sesión\n          \n        \n        \n          Registrarse\n          Olvidé mi contraseña\n        \n      \n      \n        \n          \n            \n              \n            \n            \n            \n              \n            \n            \n            \n              \n            \n            \n            \n              \n            \n          \n          \n            Registrarse\n          \n        \n        \n          Iniciar sesión\n          Olvidé mi contraseña\n        \n      \n      \n        \n          \n            \n              \n            \n          \n          \n            Enviar contraseña\n          \n        \n        \n          Iniciar sesión\n          Registrarse\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                      Iniciar sesión                                    Registrarse          Olvidé mi contraseña                                                                                                                                                                                                                                                                  Registrarse                                    Iniciar sesión          Olvidé mi contraseña                                                                                                            Enviar contraseña                                    Iniciar sesión          Registrarse                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginGuard.html":{"url":"injectables/LoginGuard.html","title":"injectable - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/login.guard.ts\n        \n\n            \n                Description\n            \n            \n                Routing guard to control user's navigation when trying to open login page.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/login.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of LoginGuardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        canActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/guards/login.guard.ts:33\n                            \n                        \n\n\n                \n                    \n                            Routing Guard method to check if the user is authenticated or not.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/login.guard.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/guards/login.guard.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { CoreModule } from '../core.module';\nimport { AuthenticationService } from '../auth/authentication.service';\n\n/**\n * Routing guard to control user's navigation when trying to open login page.\n *\n * @date 2018-06-28\n * @export\n * @class LoginGuardService\n * @implements {CanActivate}\n */\n@Injectable({\n  providedIn: CoreModule\n})\nexport class LoginGuard implements CanActivate {\n\n  /**\n   * Creates an instance of LoginGuardService.\n   * @param {AuthenticationService} auth\n   * @param {Router} router\n   * @memberof LoginGuardService\n   */\n  constructor(public auth: AuthenticationService, public router: Router) { }\n\n  /**\n   * Routing Guard method to check if the user is authenticated or not.\n   *\n   * @returns {boolean}\n   * @memberof AuthGuardService\n   */\n  public canActivate(): boolean {\n    if (this.auth.isAuthenticated()) {\n      this.router.navigate(['dashboard']);\n      return false;\n    }\n    return true;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/login.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/login.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/login.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/login.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginInput {\n\n    username: string;\n    password: string;\n\n    constructor(username = '', password = '') {\n        this.username = username;\n        this.password = password;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n  Modules\n  MainModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nHomeComponent->MainModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nMainModule -->\n\nLoginComponent->MainModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nMainModule -->\n\nNotFoundComponent->MainModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMainModule -->\n\nSharedModule->MainModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main/main.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Application's main module (not lazy-loaded) which also includes Login component\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent, LoginComponent, NotFoundComponent} from './pages';\nimport { SharedModule } from '../../shared/shared.module';\n\n/**\n * Application's main module (not lazy-loaded) which also includes Login component\n *\n * @date 2018-06-28\n * @export\n * @class MainModule\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [\n    HomeComponent,\n    LoginComponent,\n    NotFoundComponent\n  ]\n})\nexport class MainModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/menu-item.ts\n        \n\n            \n                Description\n            \n            \n                Model of elements inside Side menu.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                areChildrenOpened\n                            \n                            \n                                    Public\n                                    Optional\n                                children\n                            \n                            \n                                    Public\n                                iconName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, iconName: string, path: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/menu-item.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of Menu Item.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            areChildrenOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        areChildrenOpened:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:16\n                            \n                        \n\n                \n                    \n                        If the item is a parent this property reflects if the second level menu is opened or closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:24\n                            \n                        \n\n                \n                    \n                        Stores current's element children.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:32\n                            \n                        \n\n                \n                    \n                        Material icon name for this element.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:40\n                            \n                        \n\n                \n                    \n                        Number to identify the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:48\n                            \n                        \n\n                \n                    \n                        Menu element name.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:56\n                            \n                        \n\n                \n                    \n                        Menu element name to navigate using routerLink (absolute or relative paths).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/menu-item.ts:64\n                            \n                        \n\n                \n                    \n                        Represents if the current element is the actual navigation page.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MenuItem {\n\n  /**\n   * If the item is a parent this property reflects if the second level menu is opened or closed.\n   *\n   * @type {boolean}\n   * @memberof MenuItem\n   */\n  public areChildrenOpened?: boolean;\n\n  /**\n   * Stores current's element children.\n   *\n   * @type {MenuItem[]}\n   * @memberof MenuItem\n   */\n  public children?: MenuItem[];\n\n  /**\n   * Material icon name for this element.\n   *\n   * @type {string}\n   * @memberof MenuItem\n   */\n  public iconName: string;\n\n  /**\n   * Number to identify the menu item.\n   *\n   * @type {number}\n   * @memberof MenuItem\n   */\n  public id: number;\n\n  /**\n   * Menu element name.\n   *\n   * @type {string}\n   * @memberof MenuItem\n   */\n  public name: string;\n\n  /**\n   * Menu element name to navigate using routerLink (absolute or relative paths).\n   *\n   * @type {string}\n   * @memberof MenuItem\n   */\n  public path: string;\n\n  /**\n   * Represents if the current element is the actual navigation page.\n   *\n   * @type {boolean}\n   * @memberof MenuItem\n   */\n  public selected: boolean;\n\n  /**\n   * Creates an instance of Menu Item.\n   *\n   * @date 2018-06-30\n   * @param {number} id\n   * @param {string} name\n   * @param {string} iconName\n   * @param {string} path\n   * @memberof MenuItem\n   */\n  constructor(id: number, name: string, iconName: string, path: string) {\n    this.id = id;\n    this.name = name;\n    this.iconName = iconName;\n    this.path = path;\n    this.selected = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuMock.html":{"url":"classes/MenuMock.html","title":"class - MenuMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/mocks/menu-mock.ts\n        \n\n            \n                Description\n            \n            \n                Mock for Menu Items\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/mocks/menu-mock.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of MenuMock.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menu:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/mocks/menu-mock.ts:19\n                            \n                        \n\n                \n                    \n                        Stores mocked menu items\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/mocks/menu-mock.ts:39\n                            \n                        \n\n\n                \n                    \n                            Generates Menu Items.\n\n\n                            \n                            \n                            \n                                Returns :     MenuItem[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { MenuItem } from '../../shared/models';\n\n/**\n *Mock for Menu Items\n *\n * @author Federico Camacho\n * @date 2018-06-30\n * @export\n * @class MenuMock\n */\nexport class MenuMock {\n\n  /**\n   *Stores mocked menu items\n   *\n   * @type {MenuItem[]}\n   * @memberof MenuMock\n   */\n  public menu: MenuItem[];\n\n  /**\n   *Creates an instance of MenuMock.\n   * @author Federico Camacho\n   * @date 2018-06-30\n   * @memberof MenuMock\n   */\n  constructor() {\n    this.menu = this.generateMenu();\n  }\n\n  /**\n   *Generates Menu Items.\n   *\n   * @author Federico Camacho\n   * @date 2018-06-30\n   * @returns {MenuItem[]}\n   * @memberof MenuMock\n   */\n  public generateMenu(): MenuItem[] {\n    const item0: MenuItem = new MenuItem(0, 'Opcion 0', 'home', '');\n    const item1: MenuItem = new MenuItem(1, 'Opcion 1', 'assignment', 'assignment');\n    const item2: MenuItem = new MenuItem(2, 'Opcion 2', 'build', 'build');\n    const item3: MenuItem = new MenuItem(3, 'Opcion 3', 'delete', 'delete');\n    const item4: MenuItem = new MenuItem(4, 'Opcion 4', 'grade', 'grade');\n    const item5: MenuItem = new MenuItem(5, 'Opcion 5', 'favorite', 'favorite');\n    const item6: MenuItem = new MenuItem(6, 'Opcion 6', 'security', 'security');\n    const item7: MenuItem = new MenuItem(7, 'Opcion 7', 'toys', 'toys');\n    const item8: MenuItem = new MenuItem(8, 'Opcion 8', 'palette', 'palette');\n    const item9: MenuItem = new MenuItem(9, 'Opcion 9', 'music_note', 'music');\n    item3.children = [ item6, item7, item8 ];\n    item5.children = [ item9 ];\n    const items = [item0, item1, item2, item3, item4, item5];\n    return items;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Component that includes navbar and side menu.\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-nav\n            \n\n            \n                styleUrls\n                nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isHandset\n                            \n                            \n                                    Public\n                                isOpened\n                            \n                            \n                                    Public\n                                searchElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/nav/nav.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuToggled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        menuToggled(isOpened: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/components/nav/nav.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Change if side menu is shown/hidden after an user action.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isOpened\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isHandset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHandset:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/nav/nav.component.ts:28\n                            \n                        \n\n                \n                    \n                        Describes wether the device is a mobile or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpened:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/nav/nav.component.ts:36\n                            \n                        \n\n                \n                    \n                        Describes if the side menu is opened or closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchElements\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchElements:     SearchItem[]\n\n                    \n                \n                    \n                        \n                            Type :     SearchItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/nav/nav.component.ts:44\n                            \n                        \n\n                \n                    \n                        Set of elements that are retrieved from a search in nav-search component (NOT IMPLEMENTED YET).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SearchItem } from '../../../shared/models';\nimport { SearchMock } from '../../mocks/search-mock';\n\n/**\n * Component that includes navbar and side menu.\n *\n * @date 2018-08-17\n * @export\n * @class NavComponent\n */\n@Component({\n  selector: 'sc-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n\n  /**\n   * Describes wether the device is a mobile or not.\n   *\n   * @type {Observable}\n   * @memberof NavComponent\n   */\n  public isHandset: Observable;\n\n  /**\n   * Describes if the side menu is opened or closed.\n   *\n   * @type {boolean}\n   * @memberof NavComponent\n   */\n  public isOpened: boolean;\n\n  /**\n   * Set of elements that are retrieved from a search in nav-search component (NOT IMPLEMENTED YET).\n   *\n   * @type {SearchItem[]}\n   * @memberof NavComponent\n   */\n  public searchElements: SearchItem[];\n\n  /**\n   * Creates an instance of NavComponent.\n   * @date 2018-08-17\n   * @param {BreakpointObserver} breakpointObserver\n   * @memberof NavComponent\n   */\n  constructor(private breakpointObserver: BreakpointObserver) {\n    this.isHandset = this.breakpointObserver.observe(Breakpoints.Handset)\n      .pipe(\n        map(result => result.matches)\n      );\n\n    this.searchElements = SearchMock.getSearchElements();\n  }\n\n  /**\n   * Change if side menu is shown/hidden after an user action.\n   *\n   * @date 2018-08-17\n   * @param {boolean} isOpened\n   * @memberof NavComponent\n   */\n  public menuToggled(isOpened: boolean) {\n    this.isOpened = isOpened;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        menu\n      \n      Smart Campus\n      \n      \n        \n        \n          person\n        \n      \n    \n  \n\n  \n    \n      \n        \n          notifications\n          Notifications\n        \n        \n          message\n          Messages\n        \n          account_box\n          My Account\n        \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu            Smart Campus                                      person                                                  notifications          Notifications                          message          Messages                  account_box          My Account                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavSearchComponent.html":{"url":"components/NavSearchComponent.html","title":"component - NavSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/nav-search/nav-search.component.ts\n\n\n    \n        Description\n    \n    \n        Navbar search input.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-nav-search\n            \n\n            \n                styleUrls\n                nav-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filteredSet\n                            \n                            \n                                    Public\n                                isSearching\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                queryChanged\n                            \n                            \n                                    Public\n                                selectElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSet\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/nav-search/nav-search.component.ts:57\n                            \n                        \n\n                \n                    \n                            Creates an instance of NavSearchComponent.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSet\n                    \n                    \n                        The elements retrieved.\n\n                            \n                            Type:    SearchItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Input's placeholder.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        queryChanged(query: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Method triggered everytime the user changes the search criteria.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectElement(element: SearchItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Method triggered everytime the user selects a searc result item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    SearchItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredSet:     SearchItem[]\n\n                    \n                \n                    \n                        \n                            Type :     SearchItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        The elements retrieved after filtering (query).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSearching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSearching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:49\n                            \n                        \n\n                \n                    \n                        Indicates if the user is searching or not (for styling).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/nav-search/nav-search.component.ts:57\n                            \n                        \n\n                \n                    \n                        Search string wrote by the user.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { SearchItem } from '../../models';\n\n/**\n * Navbar search input.\n *\n * @date 2018-08-17\n * @export\n * @class NavSearchComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'sc-nav-search',\n  templateUrl: './nav-search.component.html',\n  styleUrls: ['./nav-search.component.scss']\n})\nexport class NavSearchComponent implements OnInit {\n\n  /**\n   * The elements retrieved.\n   *\n   * @type {SearchItem[]}\n   * @memberof NavSearchComponent\n   */\n  @Input('dataSet') dataSet: SearchItem[];\n\n  /**\n   * Input's placeholder.\n   *\n   * @type {string}\n   * @memberof NavSearchComponent\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * The elements retrieved after filtering (query).\n   *\n   * @type {SearchItem[]}\n   * @memberof NavSearchComponent\n   */\n  public filteredSet: SearchItem[];\n\n  /**\n   * Indicates if the user is searching or not (for styling).\n   *\n   * @type {boolean}\n   * @memberof NavSearchComponent\n   */\n  public isSearching: boolean;\n\n  /**\n   * Search string wrote by the user.\n   *\n   * @type {string}\n   * @memberof NavSearchComponent\n   */\n  public query: string;\n\n  /**\n   * Creates an instance of NavSearchComponent.\n   * @date 2018-08-17\n   * @memberof NavSearchComponent\n   */\n  constructor() {\n    this.query = '';\n    this.isSearching = true;\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method triggered everytime the user changes the search criteria.\n   *\n   * @date 2018-08-17\n   * @param {string} query\n   * @returns {void}\n   * @memberof NavSearchComponent\n   */\n  public queryChanged(query: string): void {\n    if (!query) { return; }\n    this.filteredSet = this.dataSet\n      .filter(data => data.name.toLowerCase().indexOf(this.query.toLowerCase()) === 0);\n    this.isSearching = false;\n  }\n\n  /**\n   * Method triggered everytime the user selects a searc result item.\n   *\n   * @date 2018-08-17\n   * @param {SearchItem} element\n   * @memberof NavSearchComponent\n   */\n  public selectElement(element: SearchItem): void {\n    this.query = element.name;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n  \n    {{ element.name }}\n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ element.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main/pages/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sc-not-found\n            \n\n            \n                styleUrls\n                not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main/pages/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/main/pages/not-found/not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  not-found works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  not-found works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'sc-root'},{'name': 'FooterComponent', 'selector': 'sc-footer'},{'name': 'HomeComponent', 'selector': 'sc-home'},{'name': 'LoginComponent', 'selector': 'sc-login'},{'name': 'NavComponent', 'selector': 'sc-nav'},{'name': 'NavSearchComponent', 'selector': 'sc-nav-search'},{'name': 'NotFoundComponent', 'selector': 'sc-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchItem.html":{"url":"classes/SearchItem.html","title":"class - SearchItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/search-item.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: string, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/search-item.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/search-item.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/search-item.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchItem {\n    name: string;\n    id: string;\n\n    constructor(name?: string, id?: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchMock.html":{"url":"classes/SearchMock.html","title":"class - SearchMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/mocks/search-mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSearchElements\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/mocks/search-mock.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSearchElements\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSearchElements()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/mocks/search-mock.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SearchItem[]\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SearchItem } from '../../shared/models';\n\nexport class SearchMock {\n    constructor() {}\n\n    public static getSearchElements(): SearchItem[] {\n        return [\n            new SearchItem('Hola', '0'),\n            new SearchItem('Chao', '1'),\n            new SearchItem('Asd', '2'),\n            new SearchItem('Dfg', '3')\n        ];\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nNavSearchComponent\n\nNavSearchComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavSearchComponent->SharedModule\n\n\n\n\n\nNavSearchComponent \n\nNavSearchComponent \n\nNavSearchComponent  -->\n\nSharedModule->NavSearchComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NavSearchComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NavSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NavSearchComponent } from './components/nav-search/nav-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatToolbarModule\n  ],\n  declarations: [NavSearchComponent],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    NavSearchComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SigningInput.html":{"url":"classes/SigningInput.html","title":"class - SigningInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SigningInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/signing.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                passwordCheck\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, name: string, lastName: string, password: string, passwordCheck: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/signing.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordCheck\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordCheck:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/signing.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SigningInput {\n\n    name: string;\n    lastName: string;\n    email: string;\n    password: string;\n    passwordCheck: string;\n    username: string;\n\n    constructor(username = '', email = '', name = '', lastName = '', password = '', passwordCheck = '') {\n        this.username = username;\n        this.password = password;\n        this.passwordCheck = passwordCheck;\n        this.email = email;\n        this.name = name;\n        this.lastName = lastName;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/user.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/api/user.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CoreModule } from '../core.module';\n\n@Injectable({\n  providedIn: CoreModule\n})\nexport class UserService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/util.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/util.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CoreModule } from '../core.module';\n\n@Injectable({\n  providedIn: CoreModule\n})\nexport class UtilService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/core/api/api.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/core/api/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/core/auth/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/core/components/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/components/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/core/guards/auth.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    src/app/core/guards/login.guard.ts\n            \n            \n                injectable\n            \n            \n                LoginGuard\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    src/app/core/mocks/menu-mock.ts\n            \n            \n                class\n            \n            \n                MenuMock\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/core/mocks/search-mock.ts\n            \n            \n                class\n            \n            \n                SearchMock\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/services/util.service.ts\n            \n            \n                injectable\n            \n            \n                UtilService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/modules/main/pages/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/modules/main/pages/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/modules/main/pages/not-found/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/components/nav-search/nav-search.component.ts\n            \n            \n                component\n            \n            \n                NavSearchComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/app/shared/models/api-response.ts\n            \n            \n                class\n            \n            \n                APIError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/shared/models/api-response.ts\n            \n            \n                class\n            \n            \n                APIResponse\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/shared/models/change-password.ts\n            \n            \n                class\n            \n            \n                ChangePasswordInput\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/models/login.ts\n            \n            \n                class\n            \n            \n                LoginInput\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/models/menu-item.ts\n            \n            \n                class\n            \n            \n                MenuItem\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/app/shared/models/search-item.ts\n            \n            \n                class\n            \n            \n                SearchItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/models/signing.ts\n            \n            \n                class\n            \n            \n                SigningInput\n            \n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.4.2\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/pwa : ^0.6.8\n        \n            @angular/router : ^6.0.3\n        \n            @angular/service-worker : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            ngx-socket-io : ^1.1.1\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginOptions   (src/.../login-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums/login-options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginOptions\n                    \n                \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 SIGNING\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWebApplication\nThis project was generated with Angular CLI version 6.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nStyling Frameworks\nAngular Material\nSee Docs\nFolder Structure\nGuideline made by Marthis Garberg\nGenerate Docs\nTo generate app's docs you need to run gulp task doc if you want to serve the documentation use the task doc-serve and open the browser in localhost:8080.\nTo do so you need to install globally Gulp using npm install gulp-cli -g.\nAnd then generate the docs running gulp doc or gulp doc-serve.\nDocumentation generated using Compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nStyles\nWithout theming angular.json must contain the following property:\n \"styles\": [\n    {\n    \"input\": \"node_modules/@angular/material/prebuilt-themes/indigo-pink.css\"\n    },\n    \"src/styles.scss\"\n]\nManifest\nAdapt App manifest and App icons (for PWA) here\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nNavComponent \n\nNavComponent \n\nNavComponent  -->\n\nCoreModule->NavComponent \n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nCoreModule->SharedModule \n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nCoreModule -->\n\nNavComponent->CoreModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nMainModule -->\n\nSharedModule->MainModule\n\n\n\n\n\nNavSearchComponent \n\nNavSearchComponent \n\nNavSearchComponent  -->\n\nSharedModule->NavSearchComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nMainModule -->\n\nHomeComponent->MainModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nMainModule -->\n\nLoginComponent->MainModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nMainModule -->\n\nNotFoundComponent->MainModule\n\n\n\n\n\nNavSearchComponent\n\nNavSearchComponent\n\nSharedModule -->\n\nNavSearchComponent->SharedModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            5 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        7 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
